#!/bin/bash
# This serves as the main entry point to the pseudo-shell.
# I think we're going to start passing the root_dir as the first arg in every script to keep
# 	track of our location in the *actual* file system as we move about

root_dir=$(pwd)

set -o pipefail		# trace error through pipes
set -o errtrace		# trace error through "time command" and other functions

# Function for catching and printing errors through pipes
	# The syntax for calling this to correctly output errors is:
	# trap 'error ${LINENO} ${?}' ERR
error() {
	job="$0"
	last_line="$1"
	last_error="$2"
	date_time=$(date +"%Y-%m-%d %T")
	echo "ERROR in ${job} : line ${last_line} with exit code ${last_error}" >> "$root_dir/file_system/logs/errors/$date_time.log"
	exit 1
}

echo -n "Initializing shell..."
if does_admin_account_exist=$(cat $root_dir/system_files/config/users | grep "admin"); then
	if [[ $does_admin_account_exist == *"admin"* ]]; then
		echo "[ok]"
		echo "WARNING! Admin account has not been setup yet! Creating Admin account now..."
		if $root_dir/system_files/bin/sys_bin/setup_admin -r $root_dir; then
			echo "Proceeding to login screen..."
			$root_dir/system_files/bin/sys_bin/login -r $root_dir
		else trap 'error ${LINENO} ${?}' ERR
		fi
	else
		echo "Proceeding to login screen..."
		$root_dir/system_files/bin/sys_bin/login -r	$root_dir
	fi
else trap 'error ${LINENO} ${?}' ERR
fi
