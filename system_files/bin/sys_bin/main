#!/bin/bash

# shellcheck source=src/system_files/bin/sys_bin/error_report.sh
source $root_dir/system_files/bin/sys_bin/error_report.sh
# shellcheck source=src/system_files/bin/sys_bin/get_dir.sh
source $root_dir/system_files/bin/sys_bin/get_dir.sh

#cat "$root_dir/system_files/bin/sys_bin/error_report.sh"

# text formatting stuff
red=`tput setaf 1`
blue=`tput setaf 4`
green=`tput setaf 2`
cyan=`tput setaf 6`
reset=`tput sgr0`
bold=`tput bold`
# end of text formatting stuff

export current_dir="$root_dir/file_system"
cd $current_dir
user_command=""

echo "Successfully logged in as $username. Welcome back."
echo ""
echo "For a list of commands, type \"help\""

while [[ "$user_command" != "exit" ]]; do
	current_dir=$(pwd)
	echo -n "$current_dir" > "$root_dir/system_files/bin/sys_bin/.current_dir"
	echo -n "${bold}${green}$username${reset}${bold}@${blue}$(hostname)${reset}:${cyan}${bold} $(get_shell_dir)${reset}$ "
	read user_command
	if [[ "$user_command" != "exit" ]]; then
		for cmd in $user_command; do
			if [[ "$cmd" == "cd" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "chgpass" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "del" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "delusr" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "edit" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "list" ]]; then
				. $root_dir/system_files/bin/list
				break
			elif [[ "$cmd" == "mkfile" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "mkusr" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "move" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "search" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "errors" ]]; then
				. $root_dir/system_files/bin/$user_command
				break
			elif [[ "$cmd" == "help" ]]; then
				echo "The following commands may be used from the terminal at any point in time."
				echo "For specific help on the usage of any of these commands, type: [command] -h"
				echo ""
				cat $root_dir/system_files/config/commands
			else echo "$user_command: Not found! For a list of commands, type \"help\""
				break
			fi
		done
	fi
done
